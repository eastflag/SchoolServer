<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aura.smartschool.persistence.MobileMapper">

<select id="selectHome" parameterType="Home" resultType="Integer">
	SELECT count(*) FROM HOME
	WHERE home_id = #{home_id}
</select> 

<select id="signIn" parameterType="Member" resultType="Member">
	SELECT * FROM member
	WHERE mdn=#{mdn} and home_id=#{home_id};
</select>

<select id="selectMemberList" parameterType="Home" resultType="Member">
	SELECT 
		M.member_id, M.home_id, M.mdn, M.gcm_id, M.is_parent, M.name, M.relation, M.photo, M.school_grade, M.school_class,
		S.school_id, S.School_name, 
		CAST(AES_DECRYPT(unhex(S.address), 'aura') AS CHAR(500)) as 'address', 
		CAST(AES_DECRYPT(unhex(S.new_address), 'aura') AS CHAR(500)) as 'new_address', 
		CAST(AES_DECRYPT(unhex(S.lat), 'aura') AS CHAR(20)) as 'lat', 
		CAST(AES_DECRYPT(unhex(S.lng), 'aura') AS CHAR(20)) as 'lng',
		S.homepage,
		S.contact
	FROM member M left join school S on M.school_id = S.school_id
	WHERE M.home_id = #{home_id}
</select>
	
<insert id="insertHome" parameterType="Home">
	INSERT INTO home(home_id) values(#{home_id});
</insert>

<insert id="insertMember" parameterType="Member">
	INSERT INTO 
		MEMBER(home_id, mdn, gcm_id, is_parent, name, relation, photo, school_id, school_grade, school_class) 
		values(#{home_id}, #{mdn}, #{gcm_id}, #{is_parent}, #{name}, #{relation}, #{photo}, 
		<choose>                                                                                                  
			<when test="school_id == 0">                                                                     
				null,                                                                                  
			</when>                                                                                               
			<otherwise>                                                                     
				#{school_id},                                                                                
			</otherwise>                                                                                               
		</choose> 
		#{school_grade}, #{school_class});
</insert>

<update id="updateMember" parameterType="Member">
	UPDATE MEMBER
	<set>
		<if test="mdn != null">mdn=#{mdn},</if>
		<if test="name != null">name=#{name},</if>
		<if test="relation != null">relation=#{relation},</if>
		<if test="photo != null">photo=#{photo},</if>
		<if test="school_name != null">school_name=#{school_name},</if>
		<if test="school_grade != null">school_grade=#{school_grade},</if>
		<if test="school_class != null">school_class=#{school_class}</if>
	</set>
	WHERE member_id = #{member_id} 
</update>

<update id="updateGcmId" parameterType="Member">
	UPDATE MEMBER
		set gcm_id = #{gcm_id}
	WHERE home_id = #{home_id} and mdn = #{mdn}
</update>

<insert id="insertLocation" parameterType="LocationVO">
	INSERT INTO 
		LOCATION(member_id, lat, lng, address) 
		values(#{member_id}, 
			HEX(AES_ENCRYPT(#{lat}, 'aura')),
			HEX(AES_ENCRYPT(#{lng}, 'aura')), 
			HEX(AES_ENCRYPT(#{address}, 'aura'))
		);
</insert>

<select id="selectLastLocation" parameterType="Member" resultType="LocationVO">
	SELECT 
		member_id,
		CAST(AES_DECRYPT(unhex(address), 'aura') AS CHAR(500)) as 'address', 
		CAST(AES_DECRYPT(unhex(lat), 'aura') AS CHAR(20)) as 'lat', 
		CAST(AES_DECRYPT(unhex(lng), 'aura') AS CHAR(20)) as 'lng',
		CREATED_DATE
	FROM LOCATION
	WHERE member_id = #{member_id} and created_date >= curdate()
	ORDER BY CREATED_DATE desc
	LIMIT 1;
</select>

<select id="selectLastHomeLocation" parameterType="Home" resultType="LocationVO">
	SELECT location_id, member_id, lat, lng, created_date 
	from lat
	(select * from location
	where member_id in (select member_id from home where home_id = '길동이네집')
	order by created_date desc ) A
group by member_id;
</select>

<select id="selectLocationList" parameterType="Member" resultType="LocationVO">
	SELECT 
		CAST(AES_DECRYPT(unhex(address), 'aura') AS CHAR(500)) as 'address', 
		CAST(AES_DECRYPT(unhex(lat), 'aura') AS CHAR(20)) as 'lat', 
		CAST(AES_DECRYPT(unhex(lng), 'aura') AS CHAR(20)) as 'lng',
		CREATED_DATE
	FROM LOCATION
	WHERE member_id = #{member_id} and
		 created_date > date_format(curdate( ), '%Y-%m-%d %H:%i:%s' ) 
	ORDER BY CREATED_DATE asc
</select>

<select id="selectSchoolList" parameterType="SchoolVO" resultType="SchoolVO">
	SELECT school_id, school_name, gubun1, gubun2, zipcode,
			CAST(AES_DECRYPT(unhex(address), 'aura') AS CHAR(500)) as 'address', 
			CAST(AES_DECRYPT(unhex(new_address), 'aura') AS CHAR(500)) as 'new_address', 
			CAST(AES_DECRYPT(unhex(lat), 'aura') AS CHAR(20)) as 'lat', 
			CAST(AES_DECRYPT(unhex(lng), 'aura') AS CHAR(20)) as 'lng',
			homepage, fax, contact
	FROM school
	WHERE school_name like CONCAT(#{school_name},'%')
	order by school_name asc
</select>



<insert id="insertSchool" parameterType="SchoolVO">
	INSERT INTO school(
			name,
			gubun1,
			gubun2,
			zipcode,
			address,
			new_address,
			lat,
			lng,
			homepage,
			fax,
			contact) 
		VALUES (
			#{name},
			#{gubun1},
			#{gubun2},
			#{zipcode},
			HEX(AES_ENCRYPT(#{address}, 'aura')),
			HEX(AES_ENCRYPT(#{new_address}, 'aura')),
			HEX(AES_ENCRYPT(#{lat}, 'aura')),
			HEX(AES_ENCRYPT(#{lng}, 'aura')),
			#{homepage},
			#{fax},
			#{contact})
</insert>

</mapper>